apply plugin: 'org.jetbrains.kotlin.multiplatform'
apply plugin: 'app.cash.redwood.tools.compose'

def generatedDir = 'build/generated/redwood'

kotlin {
  apply from: "${rootDir}/addAllTargets.gradle"

  // Ensure our codegen correctly works in explicit API mode.
  explicitApi()

  sourceSets {
    commonMain {
      kotlin {
        srcDir generatedDir
      }
      dependencies {
        api projects.redwoodTestSchema.widget
        api projects.redwoodProtocolCompose // TODO should be redwoodCompose!
      }
    }
  }

  targets.all {
    compilations.all {
      kotlinOptions {
        // Ensure our codegen does not produce any warnings.
        allWarningsAsErrors = true

        freeCompilerArgs += [
          // Ensure our codegen can handle the latest language semantics.
          // https://kotlinlang.org/docs/compiler-reference.html#progressive
          '-progressive'
        ]
      }
    }
  }
}

configurations {
  generator
}

dependencies {
  generator projects.redwoodSchemaGenerator
  generator projects.redwoodTestSchema
}

def generate = tasks.register('redwoodGenerate', JavaExec) {
  it.classpath(configurations.generator)
  it.main('app.cash.redwood.schema.generator.Main')
  it.args(
    '--compose',
    '--out', generatedDir,
    'example.redwood.ExampleSchema',
  )

  it.doFirst {
    file(generatedDir).deleteDir()
  }
}

kotlin.targets.all { target ->
  target.compilations.all { compilation ->
    compilation.compileKotlinTask.dependsOn(generate.get())
  }
}
