// Klib ABI Dump
// Targets: [iosArm64, iosSimulatorArm64, iosX64, js]
// Rendering settings:
// - Signature version: 2
// - Show manifest properties: true
// - Show declarations: true

// Library unique name: <app.cash.redwood:redwood-layout-compose>
abstract interface app.cash.redwood.layout.compose/BoxScope { // app.cash.redwood.layout.compose/BoxScope|null[0]
    open fun (app.cash.redwood/Modifier).height(app.cash.redwood.ui/Dp): app.cash.redwood/Modifier // app.cash.redwood.layout.compose/BoxScope.height|height@app.cash.redwood.Modifier(app.cash.redwood.ui.Dp){}[0]
    open fun (app.cash.redwood/Modifier).horizontalAlignment(app.cash.redwood.layout.api/CrossAxisAlignment): app.cash.redwood/Modifier // app.cash.redwood.layout.compose/BoxScope.horizontalAlignment|horizontalAlignment@app.cash.redwood.Modifier(app.cash.redwood.layout.api.CrossAxisAlignment){}[0]
    open fun (app.cash.redwood/Modifier).margin(app.cash.redwood.ui/Margin): app.cash.redwood/Modifier // app.cash.redwood.layout.compose/BoxScope.margin|margin@app.cash.redwood.Modifier(app.cash.redwood.ui.Margin){}[0]
    open fun (app.cash.redwood/Modifier).size(app.cash.redwood.ui/Dp, app.cash.redwood.ui/Dp): app.cash.redwood/Modifier // app.cash.redwood.layout.compose/BoxScope.size|size@app.cash.redwood.Modifier(app.cash.redwood.ui.Dp;app.cash.redwood.ui.Dp){}[0]
    open fun (app.cash.redwood/Modifier).verticalAlignment(app.cash.redwood.layout.api/CrossAxisAlignment): app.cash.redwood/Modifier // app.cash.redwood.layout.compose/BoxScope.verticalAlignment|verticalAlignment@app.cash.redwood.Modifier(app.cash.redwood.layout.api.CrossAxisAlignment){}[0]
    open fun (app.cash.redwood/Modifier).width(app.cash.redwood.ui/Dp): app.cash.redwood/Modifier // app.cash.redwood.layout.compose/BoxScope.width|width@app.cash.redwood.Modifier(app.cash.redwood.ui.Dp){}[0]
}

abstract interface app.cash.redwood.layout.compose/ColumnScope { // app.cash.redwood.layout.compose/ColumnScope|null[0]
    open fun (app.cash.redwood/Modifier).flex(kotlin/Double): app.cash.redwood/Modifier // app.cash.redwood.layout.compose/ColumnScope.flex|flex@app.cash.redwood.Modifier(kotlin.Double){}[0]
    open fun (app.cash.redwood/Modifier).grow(kotlin/Double): app.cash.redwood/Modifier // app.cash.redwood.layout.compose/ColumnScope.grow|grow@app.cash.redwood.Modifier(kotlin.Double){}[0]
    open fun (app.cash.redwood/Modifier).height(app.cash.redwood.ui/Dp): app.cash.redwood/Modifier // app.cash.redwood.layout.compose/ColumnScope.height|height@app.cash.redwood.Modifier(app.cash.redwood.ui.Dp){}[0]
    open fun (app.cash.redwood/Modifier).horizontalAlignment(app.cash.redwood.layout.api/CrossAxisAlignment): app.cash.redwood/Modifier // app.cash.redwood.layout.compose/ColumnScope.horizontalAlignment|horizontalAlignment@app.cash.redwood.Modifier(app.cash.redwood.layout.api.CrossAxisAlignment){}[0]
    open fun (app.cash.redwood/Modifier).margin(app.cash.redwood.ui/Margin): app.cash.redwood/Modifier // app.cash.redwood.layout.compose/ColumnScope.margin|margin@app.cash.redwood.Modifier(app.cash.redwood.ui.Margin){}[0]
    open fun (app.cash.redwood/Modifier).shrink(kotlin/Double): app.cash.redwood/Modifier // app.cash.redwood.layout.compose/ColumnScope.shrink|shrink@app.cash.redwood.Modifier(kotlin.Double){}[0]
    open fun (app.cash.redwood/Modifier).size(app.cash.redwood.ui/Dp, app.cash.redwood.ui/Dp): app.cash.redwood/Modifier // app.cash.redwood.layout.compose/ColumnScope.size|size@app.cash.redwood.Modifier(app.cash.redwood.ui.Dp;app.cash.redwood.ui.Dp){}[0]
    open fun (app.cash.redwood/Modifier).width(app.cash.redwood.ui/Dp): app.cash.redwood/Modifier // app.cash.redwood.layout.compose/ColumnScope.width|width@app.cash.redwood.Modifier(app.cash.redwood.ui.Dp){}[0]
}

abstract interface app.cash.redwood.layout.compose/RowScope { // app.cash.redwood.layout.compose/RowScope|null[0]
    open fun (app.cash.redwood/Modifier).flex(kotlin/Double): app.cash.redwood/Modifier // app.cash.redwood.layout.compose/RowScope.flex|flex@app.cash.redwood.Modifier(kotlin.Double){}[0]
    open fun (app.cash.redwood/Modifier).grow(kotlin/Double): app.cash.redwood/Modifier // app.cash.redwood.layout.compose/RowScope.grow|grow@app.cash.redwood.Modifier(kotlin.Double){}[0]
    open fun (app.cash.redwood/Modifier).height(app.cash.redwood.ui/Dp): app.cash.redwood/Modifier // app.cash.redwood.layout.compose/RowScope.height|height@app.cash.redwood.Modifier(app.cash.redwood.ui.Dp){}[0]
    open fun (app.cash.redwood/Modifier).margin(app.cash.redwood.ui/Margin): app.cash.redwood/Modifier // app.cash.redwood.layout.compose/RowScope.margin|margin@app.cash.redwood.Modifier(app.cash.redwood.ui.Margin){}[0]
    open fun (app.cash.redwood/Modifier).shrink(kotlin/Double): app.cash.redwood/Modifier // app.cash.redwood.layout.compose/RowScope.shrink|shrink@app.cash.redwood.Modifier(kotlin.Double){}[0]
    open fun (app.cash.redwood/Modifier).size(app.cash.redwood.ui/Dp, app.cash.redwood.ui/Dp): app.cash.redwood/Modifier // app.cash.redwood.layout.compose/RowScope.size|size@app.cash.redwood.Modifier(app.cash.redwood.ui.Dp;app.cash.redwood.ui.Dp){}[0]
    open fun (app.cash.redwood/Modifier).verticalAlignment(app.cash.redwood.layout.api/CrossAxisAlignment): app.cash.redwood/Modifier // app.cash.redwood.layout.compose/RowScope.verticalAlignment|verticalAlignment@app.cash.redwood.Modifier(app.cash.redwood.layout.api.CrossAxisAlignment){}[0]
    open fun (app.cash.redwood/Modifier).width(app.cash.redwood.ui/Dp): app.cash.redwood/Modifier // app.cash.redwood.layout.compose/RowScope.width|width@app.cash.redwood.Modifier(app.cash.redwood.ui.Dp){}[0]
}

final val app.cash.redwood.layout.compose/app_cash_redwood_layout_compose_BoxScopeImpl$stableprop // app.cash.redwood.layout.compose/app_cash_redwood_layout_compose_BoxScopeImpl$stableprop|#static{}app_cash_redwood_layout_compose_BoxScopeImpl$stableprop[0]
final val app.cash.redwood.layout.compose/app_cash_redwood_layout_compose_ColumnScopeImpl$stableprop // app.cash.redwood.layout.compose/app_cash_redwood_layout_compose_ColumnScopeImpl$stableprop|#static{}app_cash_redwood_layout_compose_ColumnScopeImpl$stableprop[0]
final val app.cash.redwood.layout.compose/app_cash_redwood_layout_compose_FlexImpl$stableprop // app.cash.redwood.layout.compose/app_cash_redwood_layout_compose_FlexImpl$stableprop|#static{}app_cash_redwood_layout_compose_FlexImpl$stableprop[0]
final val app.cash.redwood.layout.compose/app_cash_redwood_layout_compose_GrowImpl$stableprop // app.cash.redwood.layout.compose/app_cash_redwood_layout_compose_GrowImpl$stableprop|#static{}app_cash_redwood_layout_compose_GrowImpl$stableprop[0]
final val app.cash.redwood.layout.compose/app_cash_redwood_layout_compose_HeightImpl$stableprop // app.cash.redwood.layout.compose/app_cash_redwood_layout_compose_HeightImpl$stableprop|#static{}app_cash_redwood_layout_compose_HeightImpl$stableprop[0]
final val app.cash.redwood.layout.compose/app_cash_redwood_layout_compose_HorizontalAlignmentImpl$stableprop // app.cash.redwood.layout.compose/app_cash_redwood_layout_compose_HorizontalAlignmentImpl$stableprop|#static{}app_cash_redwood_layout_compose_HorizontalAlignmentImpl$stableprop[0]
final val app.cash.redwood.layout.compose/app_cash_redwood_layout_compose_MarginImpl$stableprop // app.cash.redwood.layout.compose/app_cash_redwood_layout_compose_MarginImpl$stableprop|#static{}app_cash_redwood_layout_compose_MarginImpl$stableprop[0]
final val app.cash.redwood.layout.compose/app_cash_redwood_layout_compose_RowScopeImpl$stableprop // app.cash.redwood.layout.compose/app_cash_redwood_layout_compose_RowScopeImpl$stableprop|#static{}app_cash_redwood_layout_compose_RowScopeImpl$stableprop[0]
final val app.cash.redwood.layout.compose/app_cash_redwood_layout_compose_ShrinkImpl$stableprop // app.cash.redwood.layout.compose/app_cash_redwood_layout_compose_ShrinkImpl$stableprop|#static{}app_cash_redwood_layout_compose_ShrinkImpl$stableprop[0]
final val app.cash.redwood.layout.compose/app_cash_redwood_layout_compose_SizeImpl$stableprop // app.cash.redwood.layout.compose/app_cash_redwood_layout_compose_SizeImpl$stableprop|#static{}app_cash_redwood_layout_compose_SizeImpl$stableprop[0]
final val app.cash.redwood.layout.compose/app_cash_redwood_layout_compose_VerticalAlignmentImpl$stableprop // app.cash.redwood.layout.compose/app_cash_redwood_layout_compose_VerticalAlignmentImpl$stableprop|#static{}app_cash_redwood_layout_compose_VerticalAlignmentImpl$stableprop[0]
final val app.cash.redwood.layout.compose/app_cash_redwood_layout_compose_WidthImpl$stableprop // app.cash.redwood.layout.compose/app_cash_redwood_layout_compose_WidthImpl$stableprop|#static{}app_cash_redwood_layout_compose_WidthImpl$stableprop[0]

final fun app.cash.redwood.layout.compose/Box(app.cash.redwood.layout.api/Constraint?, app.cash.redwood.layout.api/Constraint?, app.cash.redwood.ui/Margin?, app.cash.redwood.layout.api/CrossAxisAlignment?, app.cash.redwood.layout.api/CrossAxisAlignment?, app.cash.redwood/Modifier?, kotlin/Function3<app.cash.redwood.layout.compose/BoxScope, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int) // app.cash.redwood.layout.compose/Box|Box(app.cash.redwood.layout.api.Constraint?;app.cash.redwood.layout.api.Constraint?;app.cash.redwood.ui.Margin?;app.cash.redwood.layout.api.CrossAxisAlignment?;app.cash.redwood.layout.api.CrossAxisAlignment?;app.cash.redwood.Modifier?;kotlin.Function3<app.cash.redwood.layout.compose.BoxScope,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int){}[0]
final fun app.cash.redwood.layout.compose/Column(app.cash.redwood.layout.api/Constraint?, app.cash.redwood.layout.api/Constraint?, app.cash.redwood.ui/Margin?, app.cash.redwood.layout.api/Overflow?, app.cash.redwood.layout.api/CrossAxisAlignment?, app.cash.redwood.layout.api/MainAxisAlignment?, kotlin/Function1<app.cash.redwood.ui/Px, kotlin/Unit>?, app.cash.redwood/Modifier?, kotlin/Function3<app.cash.redwood.layout.compose/ColumnScope, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int) // app.cash.redwood.layout.compose/Column|Column(app.cash.redwood.layout.api.Constraint?;app.cash.redwood.layout.api.Constraint?;app.cash.redwood.ui.Margin?;app.cash.redwood.layout.api.Overflow?;app.cash.redwood.layout.api.CrossAxisAlignment?;app.cash.redwood.layout.api.MainAxisAlignment?;kotlin.Function1<app.cash.redwood.ui.Px,kotlin.Unit>?;app.cash.redwood.Modifier?;kotlin.Function3<app.cash.redwood.layout.compose.ColumnScope,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int){}[0]
final fun app.cash.redwood.layout.compose/Row(app.cash.redwood.layout.api/Constraint?, app.cash.redwood.layout.api/Constraint?, app.cash.redwood.ui/Margin?, app.cash.redwood.layout.api/Overflow?, app.cash.redwood.layout.api/MainAxisAlignment?, app.cash.redwood.layout.api/CrossAxisAlignment?, kotlin/Function1<app.cash.redwood.ui/Px, kotlin/Unit>?, app.cash.redwood/Modifier?, kotlin/Function3<app.cash.redwood.layout.compose/RowScope, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int) // app.cash.redwood.layout.compose/Row|Row(app.cash.redwood.layout.api.Constraint?;app.cash.redwood.layout.api.Constraint?;app.cash.redwood.ui.Margin?;app.cash.redwood.layout.api.Overflow?;app.cash.redwood.layout.api.MainAxisAlignment?;app.cash.redwood.layout.api.CrossAxisAlignment?;kotlin.Function1<app.cash.redwood.ui.Px,kotlin.Unit>?;app.cash.redwood.Modifier?;kotlin.Function3<app.cash.redwood.layout.compose.RowScope,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int){}[0]
final fun app.cash.redwood.layout.compose/Spacer(app.cash.redwood.ui/Dp, app.cash.redwood.ui/Dp, app.cash.redwood/Modifier?, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int) // app.cash.redwood.layout.compose/Spacer|Spacer(app.cash.redwood.ui.Dp;app.cash.redwood.ui.Dp;app.cash.redwood.Modifier?;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int){}[0]
