// Klib ABI Dump
// Targets: [iosArm64, iosSimulatorArm64, iosX64, js]
// Alias: ios => [iosArm64, iosSimulatorArm64, iosX64]
// Rendering settings:
// - Signature version: 2
// - Show manifest properties: true
// - Show declarations: true

// Library unique name: <app.cash.redwood:redwood-compose>
abstract interface app.cash.redwood.compose/RedwoodComposition { // app.cash.redwood.compose/RedwoodComposition|null[0]
    abstract fun cancel() // app.cash.redwood.compose/RedwoodComposition.cancel|cancel(){}[0]
    abstract fun setContent(kotlin/Function2<androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>) // app.cash.redwood.compose/RedwoodComposition.setContent|setContent(kotlin.Function2<androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>){}[0]
}

final val app.cash.redwood.compose/LocalOnBackPressedDispatcher // app.cash.redwood.compose/LocalOnBackPressedDispatcher|{}LocalOnBackPressedDispatcher[0]
    final fun <get-LocalOnBackPressedDispatcher>(): androidx.compose.runtime/ProvidableCompositionLocal<app.cash.redwood.ui/OnBackPressedDispatcher> // app.cash.redwood.compose/LocalOnBackPressedDispatcher.<get-LocalOnBackPressedDispatcher>|<get-LocalOnBackPressedDispatcher>(){}[0]
final val app.cash.redwood.compose/LocalUiConfiguration // app.cash.redwood.compose/LocalUiConfiguration|{}LocalUiConfiguration[0]
    final fun <get-LocalUiConfiguration>(): androidx.compose.runtime/ProvidableCompositionLocal<app.cash.redwood.ui/UiConfiguration> // app.cash.redwood.compose/LocalUiConfiguration.<get-LocalUiConfiguration>|<get-LocalUiConfiguration>(){}[0]
final val app.cash.redwood.compose/LocalWidgetVersion // app.cash.redwood.compose/LocalWidgetVersion|{}LocalWidgetVersion[0]
    final fun <get-LocalWidgetVersion>(): androidx.compose.runtime/ProvidableCompositionLocal<kotlin/UInt> // app.cash.redwood.compose/LocalWidgetVersion.<get-LocalWidgetVersion>|<get-LocalWidgetVersion>(){}[0]
final val app.cash.redwood.compose/WidgetVersion // app.cash.redwood.compose/WidgetVersion|{}WidgetVersion[0]
    final fun <get-WidgetVersion>(androidx.compose.runtime/Composer?, kotlin/Int): kotlin/UInt // app.cash.redwood.compose/WidgetVersion.<get-WidgetVersion>|<get-WidgetVersion>(androidx.compose.runtime.Composer?;kotlin.Int){}[0]
final val app.cash.redwood.compose/app_cash_redwood_compose_ChildrenNode$stableprop // app.cash.redwood.compose/app_cash_redwood_compose_ChildrenNode$stableprop|#static{}app_cash_redwood_compose_ChildrenNode$stableprop[0]
final val app.cash.redwood.compose/app_cash_redwood_compose_NodeApplier$stableprop // app.cash.redwood.compose/app_cash_redwood_compose_NodeApplier$stableprop|#static{}app_cash_redwood_compose_NodeApplier$stableprop[0]
final val app.cash.redwood.compose/app_cash_redwood_compose_RedwoodComposeContent$stableprop // app.cash.redwood.compose/app_cash_redwood_compose_RedwoodComposeContent$stableprop|#static{}app_cash_redwood_compose_RedwoodComposeContent$stableprop[0]
final val app.cash.redwood.compose/app_cash_redwood_compose_WidgetNode$stableprop // app.cash.redwood.compose/app_cash_redwood_compose_WidgetNode$stableprop|#static{}app_cash_redwood_compose_WidgetNode$stableprop[0]
final val app.cash.redwood.compose/current // app.cash.redwood.compose/current|@app.cash.redwood.ui.OnBackPressedDispatcher.Companion{}current[0]
    final fun (app.cash.redwood.ui/OnBackPressedDispatcher.Companion).<get-current>(androidx.compose.runtime/Composer?, kotlin/Int): app.cash.redwood.ui/OnBackPressedDispatcher // app.cash.redwood.compose/current.<get-current>|<get-current>@app.cash.redwood.ui.OnBackPressedDispatcher.Companion(androidx.compose.runtime.Composer?;kotlin.Int){}[0]
final val app.cash.redwood.compose/current // app.cash.redwood.compose/current|@app.cash.redwood.ui.UiConfiguration.Companion{}current[0]
    final fun (app.cash.redwood.ui/UiConfiguration.Companion).<get-current>(androidx.compose.runtime/Composer?, kotlin/Int): app.cash.redwood.ui/UiConfiguration // app.cash.redwood.compose/current.<get-current>|<get-current>@app.cash.redwood.ui.UiConfiguration.Companion(androidx.compose.runtime.Composer?;kotlin.Int){}[0]

final fun <#A: kotlin/Any> app.cash.redwood.compose/RedwoodComposition(kotlinx.coroutines/CoroutineScope, app.cash.redwood.widget/RedwoodView<#A>, app.cash.redwood.widget/WidgetSystem<#A>, kotlin/Function0<kotlin/Unit> = ...): app.cash.redwood.compose/RedwoodComposition // app.cash.redwood.compose/RedwoodComposition|RedwoodComposition(kotlinx.coroutines.CoroutineScope;app.cash.redwood.widget.RedwoodView<0:0>;app.cash.redwood.widget.WidgetSystem<0:0>;kotlin.Function0<kotlin.Unit>){0ยง<kotlin.Any>}[0]
final fun <#A: kotlin/Any> app.cash.redwood.compose/RedwoodComposition(kotlinx.coroutines/CoroutineScope, app.cash.redwood.widget/Widget.Children<#A>, app.cash.redwood.ui/OnBackPressedDispatcher, androidx.compose.runtime.saveable/SaveableStateRegistry?, kotlinx.coroutines.flow/StateFlow<app.cash.redwood.ui/UiConfiguration>, app.cash.redwood.widget/WidgetSystem<#A>, kotlin/Function0<kotlin/Unit> = ...): app.cash.redwood.compose/RedwoodComposition // app.cash.redwood.compose/RedwoodComposition|RedwoodComposition(kotlinx.coroutines.CoroutineScope;app.cash.redwood.widget.Widget.Children<0:0>;app.cash.redwood.ui.OnBackPressedDispatcher;androidx.compose.runtime.saveable.SaveableStateRegistry?;kotlinx.coroutines.flow.StateFlow<app.cash.redwood.ui.UiConfiguration>;app.cash.redwood.widget.WidgetSystem<0:0>;kotlin.Function0<kotlin.Unit>){0ยง<kotlin.Any>}[0]
final fun app.cash.redwood.compose/BackHandler(kotlin/Boolean, kotlin/Function0<kotlin/Unit>, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int) // app.cash.redwood.compose/BackHandler|BackHandler(kotlin.Boolean;kotlin.Function0<kotlin.Unit>;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int){}[0]
final fun app.cash.redwood.compose/app_cash_redwood_compose_ChildrenNode$stableprop_getter(): kotlin/Int // app.cash.redwood.compose/app_cash_redwood_compose_ChildrenNode$stableprop_getter|app_cash_redwood_compose_ChildrenNode$stableprop_getter(){}[0]
final fun app.cash.redwood.compose/app_cash_redwood_compose_NodeApplier$stableprop_getter(): kotlin/Int // app.cash.redwood.compose/app_cash_redwood_compose_NodeApplier$stableprop_getter|app_cash_redwood_compose_NodeApplier$stableprop_getter(){}[0]
final fun app.cash.redwood.compose/app_cash_redwood_compose_RedwoodComposeContent$stableprop_getter(): kotlin/Int // app.cash.redwood.compose/app_cash_redwood_compose_RedwoodComposeContent$stableprop_getter|app_cash_redwood_compose_RedwoodComposeContent$stableprop_getter(){}[0]
final fun app.cash.redwood.compose/app_cash_redwood_compose_WidgetNode$stableprop_getter(): kotlin/Int // app.cash.redwood.compose/app_cash_redwood_compose_WidgetNode$stableprop_getter|app_cash_redwood_compose_WidgetNode$stableprop_getter(){}[0]

// Targets: [ios]
final object app.cash.redwood.compose/DisplayLinkClock : androidx.compose.runtime/MonotonicFrameClock { // app.cash.redwood.compose/DisplayLinkClock|null[0]
    final suspend fun <#A1: kotlin/Any?> withFrameNanos(kotlin/Function1<kotlin/Long, #A1>): #A1 // app.cash.redwood.compose/DisplayLinkClock.withFrameNanos|withFrameNanos(kotlin.Function1<kotlin.Long,0:0>){0ยง<kotlin.Any?>}[0]
}

// Targets: [ios]
final val app.cash.redwood.compose/app_cash_redwood_compose_DisplayLinkClock$stableprop // app.cash.redwood.compose/app_cash_redwood_compose_DisplayLinkClock$stableprop|#static{}app_cash_redwood_compose_DisplayLinkClock$stableprop[0]

// Targets: [ios]
final fun app.cash.redwood.compose/app_cash_redwood_compose_DisplayLinkClock$stableprop_getter(): kotlin/Int // app.cash.redwood.compose/app_cash_redwood_compose_DisplayLinkClock$stableprop_getter|app_cash_redwood_compose_DisplayLinkClock$stableprop_getter(){}[0]

// Targets: [js]
final object app.cash.redwood.compose/WindowAnimationFrameClock : androidx.compose.runtime/MonotonicFrameClock { // app.cash.redwood.compose/WindowAnimationFrameClock|null[0]
    final suspend fun <#A1: kotlin/Any?> withFrameNanos(kotlin/Function1<kotlin/Long, #A1>): #A1 // app.cash.redwood.compose/WindowAnimationFrameClock.withFrameNanos|withFrameNanos(kotlin.Function1<kotlin.Long,0:0>){0ยง<kotlin.Any?>}[0]
}

// Targets: [js]
final val app.cash.redwood.compose/app_cash_redwood_compose_JsArray$stableprop // app.cash.redwood.compose/app_cash_redwood_compose_JsArray$stableprop|#static{}app_cash_redwood_compose_JsArray$stableprop[0]

// Targets: [js]
final val app.cash.redwood.compose/app_cash_redwood_compose_JsSet$stableprop // app.cash.redwood.compose/app_cash_redwood_compose_JsSet$stableprop|#static{}app_cash_redwood_compose_JsSet$stableprop[0]

// Targets: [js]
final val app.cash.redwood.compose/app_cash_redwood_compose_WindowAnimationFrameClock$stableprop // app.cash.redwood.compose/app_cash_redwood_compose_WindowAnimationFrameClock$stableprop|#static{}app_cash_redwood_compose_WindowAnimationFrameClock$stableprop[0]

// Targets: [js]
final fun app.cash.redwood.compose/app_cash_redwood_compose_JsArray$stableprop_getter(): kotlin/Int // app.cash.redwood.compose/app_cash_redwood_compose_JsArray$stableprop_getter|app_cash_redwood_compose_JsArray$stableprop_getter(){}[0]

// Targets: [js]
final fun app.cash.redwood.compose/app_cash_redwood_compose_JsSet$stableprop_getter(): kotlin/Int // app.cash.redwood.compose/app_cash_redwood_compose_JsSet$stableprop_getter|app_cash_redwood_compose_JsSet$stableprop_getter(){}[0]

// Targets: [js]
final fun app.cash.redwood.compose/app_cash_redwood_compose_WindowAnimationFrameClock$stableprop_getter(): kotlin/Int // app.cash.redwood.compose/app_cash_redwood_compose_WindowAnimationFrameClock$stableprop_getter|app_cash_redwood_compose_WindowAnimationFrameClock$stableprop_getter(){}[0]
